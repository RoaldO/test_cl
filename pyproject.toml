[tool.poetry]
name = "test-cl"
version = "0.1.0"
description = "test creation lib analyzes your source files and generates test files for them"
authors = ["Roaldo"]
readme = "README.md"
# packages = [{include = "test_cl"}]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.3"
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"
coverage = { version="^7.1.0", extras=["toml"] }
allure-pytest = "^2.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = "true"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",  # basic ignore
    "raise AssertionError",  # ignore assertions
    "raise NotImplementedError",  # and deliberate unimplemented things
    "if __name__ == .__main__.:",  # can't run the __main__ specific code
    "@(abc\\.)?abstractmethod",  # and abstract methods are useless to test as well
    "def __init__\\(self,",  # and finially the initioalilzers; hardly ever relevant
]
